{"version":3,"sources":["serviceWorker.js","Components/Login/style.js","Components/Login/index.js","Components/Signup/style.js","Components/Signup/index.js","Components/ChatList/style.js","Components/ChatList/index.js","Components/Dashboard/style.js","Components/ChatDisplay/style.js","Components/ChatDisplay/index.js","Components/ChatTextBox/style.js","Components/ChatTextBox/index.js","Components/NewChat/style.js","Components/NewChat/index.js","Components/Dashboard/index.js","Components/ParticleComponent/index.js","index.js"],"names":["Boolean","window","location","hostname","match","style","theme","paper","padding","spacing","display","flexDirection","alignItems","width","minWidth","position","top","left","transform","form","marginTop","submit","margin","fontSize","signup","textAlign","error","firebase","require","Login","submitLogin","e","a","preventDefault","auth","signInWithEmailAndPassword","state","email","password","then","props","history","push","err","console","log","setState","loginError","onChange","target","name","value","classes","this","Paper","className","CssBaseline","Typography","variant","onSubmit","TextField","fullWidth","label","id","autoComplete","type","FormControlLabel","control","Checkbox","color","Button","to","Component","withStyles","header","login","Signup","submitSignup","passwordConfirmation","createUserWithEmailAndPassword","authRes","userObj","user","firestore","collection","doc","set","dbErr","signupError","authErr","message","required","root","backgroundColor","palette","background","height","boxShadow","listItem","cursor","newChatBtn","borderRadius","unreadMessage","right","ChatList","userIsSender","chat","messages","sender","userEmail","newChat","chatBtnClicked","selectChat","index","onClick","List","chats","map","key","ListItem","button","selected","chatIndex","ListItemAvatar","Avatar","users","filter","split","ListItemText","primary","secondary","Fragment","component","substring","read","NotificationImportant","Divider","signOut","bottom","content","marginLeft","boxSizing","paddingTop","back","messagesList","gridArea","overflow","overflowY","userMsg","float","clear","wordWrap","friendMsg","justifyitems","DisplayChat","hideChat","undefined","usr","ArrowBack","sendButton","chatBoxContainer","chatBox","ChatTextBox","onKeyUp","keyCode","submitMessage","text","isValid","replace","length","document","querySelector","placeholder","Send","NewChat","userExists","get","exists","docs","data","includes","friendemail","serverError","chatExists","chatKey","createChatKey","sendMessage","goToChat","createChat","sendTo","currentUser","sort","join","Dashboard","selectedChat","chatVisible","newChatVisible","messageRead","msg","update","FieldValue","arrayUnion","timestamp","Date","now","friend","lastMessageNotWriteSender","usersInChat","find","every","indexOf","chatObj","componentDidMount","onAuthStateChanged","where","onSnapshot","res","forEach","reverse","ChatDisplay","ParticleComponent","config","num","rps","radius","life","v","tha","alpha","scale","cross","random","Math","Object","assign","onParticleUpdate","ctx","particle","beginPath","rect","p","x","y","fillStyle","fill","closePath","bg","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","routing","exact","path","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b274aa73.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const style = theme => ({\r\n  \r\n    paper: {\r\n     \r\n        padding: theme.spacing(4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        width:'40vw',\r\n        minWidth:'400px',\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)'\r\n        \r\n      },\r\n      form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n      },\r\n      submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        padding:theme.spacing(3),\r\n        fontSize:'2em'\r\n      },\r\n      signup:{\r\n          display:'block',\r\n          textAlign:'center'\r\n      },\r\n      error:{\r\n        textAlign:'center'\r\n      }\r\n});\r\n  \r\n  export default style;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport { CssBaseline,Container,withStyles,Paper,Typography,TextField,FormControlLabel,Checkbox,Button} from '@material-ui/core';\r\nimport style from './style';\r\n\r\nconst firebase = require(\"firebase\");\r\n\r\n\r\nexport class Login extends Component {\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state =\r\n        {\r\n            email:null,\r\n            password:null,\r\n            loginError:''\r\n        };\r\n    }\r\n    submitLogin = async(e) =>{\r\n        e.preventDefault();\r\n        firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(this.state.email,this.state.password)\r\n        .then(()=>{\r\n            this.props.history.push(\"/dashboard\");\r\n        },err => {\r\n            console.log(err);\r\n            this.setState({loginError:'Server Error'});\r\n        })\r\n        console.log(\"SUBMITTING\",this.state);\r\n    }\r\n    onChange = (e) =>{\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n    render() {\r\n       \r\n        const {classes} = this.props;\r\n        return (   \r\n            \r\n                <Paper className = {classes.paper}>\r\n                     <CssBaseline />\r\n                    <Typography variant =\"h3\">\r\n                        Login\r\n                    </Typography>\r\n                    <form onSubmit={(e) => this.submitLogin(e)} className = {classes.form}>\r\n                        <TextField\r\n                         onChange={(e) => this.onChange(e)}\r\n                         variant=\"outlined\"\r\n                         margin=\"normal\"\r\n                         fullWidth\r\n                         name=\"email\"\r\n                         label=\"Email Address\"\r\n                         id=\"email\"\r\n                         autoComplete=\"email\"/>\r\n\r\n                        <TextField\r\n                        onChange={(e) => this.onChange(e)}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        />\r\n                        <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                        label=\"Remember me\"\r\n                        />\r\n                        <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n            \r\n                        >\r\n                            Login\r\n                        </Button>\r\n                        </form>\r\n                        {\r\n                            this.state.loginError ? <Typography color=\"secondary\" className = {classes.error}>{this.state.loginError}</Typography>:null\r\n                        }\r\n                        <Link to=\"/signup\" variant=\"body2\" className={classes.signup}>Don't have an account? Sign Up</Link>\r\n                      \r\n                </Paper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(style)(Login);","const style = theme => ({\r\n    paper: {\r\n        padding: theme.spacing(4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        width:'40vw',\r\n        minWidth:'400px',\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)'\r\n        \r\n        \r\n      },\r\n      header: {\r\n        textAlign:'center'\r\n      },\r\n      form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n      },\r\n      submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        padding:theme.spacing(3),\r\n        fontSize:\"2em\"\r\n      },\r\n      login:{\r\n          display:'block',\r\n          textAlign:'center',\r\n         \r\n      },\r\n      error:{\r\n        textAlign:'center'\r\n      }\r\n});\r\n  \r\n  export default style;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { CssBaseline,withStyles,Paper,Typography,TextField,Button} from '@material-ui/core';\r\nimport style from './style';\r\nconst firebase = require(\"firebase\");\r\n\r\nexport class Signup extends Component {\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = \r\n        {\r\n            email:null,\r\n            password:null,\r\n            passwordConfirmation:null,\r\n            signupError:''\r\n        };\r\n    }\r\n    \r\n    submitSignup = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( this.state.password !== this.state.passwordConfirmation){\r\n            this.setState({signupError:'Passwords do not match!'})\r\n            return;\r\n        }\r\n        firebase\r\n    .auth()\r\n    .createUserWithEmailAndPassword(this.state.email,this.state.password)\r\n    .then(authRes =>{\r\n        const userObj = {\r\n            email:authRes.user.email\r\n        };\r\n        firebase\r\n        .firestore()\r\n        .collection('users')\r\n        .doc(this.state.email)\r\n        .set(userObj)\r\n        .then(() => {\r\n            this.props.history.push('/dashboard')\r\n        },dbErr =>{\r\n            console.log(dbErr);\r\n            this.setState({signupError:'Failed to add user'});\r\n        \r\n        })\r\n       \r\n    },authErr =>{\r\n        console.log(authErr.message);\r\n        this.setState({signupError:authErr.message});\r\n    }\r\n    )}\r\n    onChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n   \r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        return (\r\n            <Paper className = {classes.paper}>\r\n            <CssBaseline />\r\n           <Typography className = {classes.header} variant =\"h3\">\r\n               Create a new Account\r\n           </Typography>\r\n           <form onSubmit = {(e) => this.submitSignup(e)} className = {classes.form}>\r\n                \r\n               <TextField\r\n                onChange = {(e) => this.onChange(e)}\r\n                variant=\"outlined\"\r\n                required\r\n                margin=\"normal\"\r\n                fullWidth\r\n                name=\"email\"\r\n                label=\"Email Address\"\r\n                id=\"email\"\r\n                autoComplete=\"email\"/>\r\n\r\n               <TextField\r\n               onChange = {(e) => this.onChange(e)}\r\n               variant=\"outlined\"\r\n               required\r\n               margin=\"normal\"\r\n               fullWidth\r\n               name=\"password\"\r\n               label=\"Password\"\r\n               type=\"password\"\r\n               id=\"password\"\r\n               autoComplete=\"current-password\"\r\n               />\r\n              \r\n              <TextField\r\n              onChange = {(e) => this.onChange(e)}\r\n               variant=\"outlined\"\r\n               required\r\n               margin=\"normal\"\r\n               fullWidth\r\n               name=\"passwordConfirmation\"\r\n               label=\"Confirm Password\"\r\n               type=\"password\"\r\n               id=\"passwordConfirmation\"\r\n               autoComplete=\"current-password\"\r\n               />\r\n               <Button\r\n               type=\"submit\"\r\n               fullWidth\r\n               variant=\"contained\"\r\n               color=\"primary\"\r\n               className={classes.submit}\r\n                \r\n               >\r\n                   Join\r\n               </Button>\r\n           </form>\r\n           {\r\n               this.state.signupError?<Typography color=\"secondary\" className={classes.error}>{this.state.signupError}</Typography>:null\r\n            }\r\n           \r\n           <Link to='/' variant=\"body2\"className={classes.login}>Do you have an account? Sign in</Link>\r\n           \r\n       </Paper>\r\n        )\r\n    }\r\n   \r\n}\r\n\r\nexport default withStyles(style)(Signup);\r\n","const style = theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    height: '100%',//calc()\r\n    position: 'absolute',\r\n    left: '0',\r\n    width: '300px',\r\n    boxShadow: '0px 0px 2px black'\r\n  },\r\n  listItem: {\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      backgroundColor: '#eee'\r\n    }\r\n    \r\n\r\n  },\r\n  newChatBtn: {\r\n    borderRadius: '0px',\r\n    height:'50px'\r\n  },\r\n  unreadMessage: {\r\n    color: 'red',\r\n    position: 'absolute',\r\n    top: '15px',\r\n    right: '5px'\r\n  }\r\n});\r\n  \r\n  export default style;","import React, { Component } from 'react';\r\nimport { CssBaseline,List,ListItem, ListItemText,withStyles,Paper,Typography,TextField,FormControlLabel,ListItemIcon,Divider,Avatar,ListItemAvatar,Checkbox,Button} from '@material-ui/core';\r\nimport {NotificationImportant} from '@material-ui/icons';\r\nimport style from './style';\r\n\r\nexport class ChatList extends Component {\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n    \r\n     \r\n          return(\r\n            <div className={classes.root}>\r\n                <Button \r\n                  variant=\"contained\" \r\n                  fullWidth \r\n                  color='primary' \r\n                  onClick={this.newChat} \r\n                  className={classes.newChatBtn}>\r\n                    New Message\r\n                </Button>\r\n                <List>\r\n                  {\r\n                    \r\n                    this.props.chats.map((chat, index) => {\r\n                      return (\r\n                        <div key={index}>\r\n                          <ListItem \r\n                            button\r\n                            onClick={() => this.selectChat(index)} \r\n                            className={classes.listItem} \r\n                            selected={this.props.chatIndex === index} \r\n                            alignItems=\"flex-start\">\r\n                            <ListItemAvatar>\r\n                              <Avatar >{chat.users.filter(user => user !== this.props.userEmail)[0].split('')[0]}</Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText \r\n                              primary={chat.users.filter(user => user !== this.props.userEmail)[0]}\r\n                              secondary={\r\n                                <React.Fragment>\r\n                                  <Typography component='span'\r\n                                    color='textPrimary'>\r\n                                      {chat.messages[0].message.substring(0, 30) + ' ...'}\r\n                                  </Typography>\r\n                                </React.Fragment>\r\n                              }/> \r\n                             </ListItem>\r\n                             {\r\n                               chat.read === false && !this.userIsSender(chat) ?<NotificationImportant className = {classes.unreadMessage}></NotificationImportant> :null\r\n                             }\r\n                             <Divider/>\r\n                         </div>)})\r\n                    }\r\n                </List>\r\n            </div>\r\n          );\r\n        \r\n      }\r\n      userIsSender = (chat) => chat.messages[0].sender === this.props.userEmail;\r\n      newChat = () => this.props.chatBtnClicked();\r\n      selectChat = (index) => this.props.selectChat(index);\r\n    }\r\n    \r\n    export default withStyles(style)(ChatList);\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n   ","const style = theme => ({\r\n    signOut: {\r\n      position: 'absolute',\r\n      bottom: '0px',\r\n      left: '0px',\r\n      width: '300px',\r\n      borderRadius: '0px',\r\n      height: '50px',\r\n      boxShadow: '0px 0px 2px black'\r\n    \r\n    }\r\n  });\r\n  \r\n  export default style;","const style = theme => ({\r\n    content: {\r\n        height: '100vh',\r\n        marginLeft: '300px',\r\n        boxSizing: 'border-box',\r\n        width: 'calc(100% - 300px)',\r\n        padding:'25px 0px',\r\n        paddingTop:'50px'\r\n      },\r\n      back : {\r\n        position:'absolute',\r\n        right:'1vw',\r\n        top:'12px',\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n          transform : 'scale(1.2,1.2)'\r\n        }\r\n        },\r\n      header:\r\n      {\r\n      boxShadow: '0px 0px 2px black',\r\n      boxSizing:'border-box',\r\n      position:'absolute',\r\n      left:'300px',\r\n      top:'0',\r\n      textAlign:'center',\r\n      color:'#fff',\r\n      padding:'12px 16px',\r\n      width: 'calc(100% - 300px)',\r\n      borderRadius: '0px',\r\n      height: '50px',\r\n      backgroundColor: '#3F51B5'\r\n      },\r\n      messagesList:\r\n      {\r\n        gridArea:'messagesList',\r\n        boxSizing:'border-box',\r\n        height:'calc(100% - 25px)',\r\n        display:'flex',\r\n        flexDirection:'column-reverse',\r\n        padding:'25px',\r\n        margin:' 0px',\r\n        width: '100%',\r\n        overflow: 'auto',\r\n        overflowY: 'scroll'\r\n      },\r\n      \r\n      userMsg: {\r\n        float:'right',\r\n        clear:'both',\r\n        padding: '20px',\r\n        boxSizing: 'border-box',\r\n        wordWrap: 'break-word',\r\n        marginTop: '10px',\r\n        backgroundColor: '#3F51B5',\r\n        color: 'white',\r\n        width: '300px',\r\n        borderRadius: '10px'\r\n      },\r\n    \r\n      friendMsg: {\r\n       \r\n        padding: '20px',\r\n        boxSizing: 'border-box',\r\n        wordWrap: 'break-word',\r\n        marginTop: '10px',\r\n        backgroundColor: '#eee',\r\n        color: '#111',\r\n        width: '300px',\r\n        borderRadius: '10px',\r\n        justifyitems:'start'\r\n      }\r\n});\r\n\r\nexport default style;","import React, { Component } from 'react';\r\nimport { withStyles} from '@material-ui/core';\r\nimport {ArrowBack} from '@material-ui/icons';\r\nimport style from \"./style.js\";\r\n\r\nexport class DisplayChat extends Component {\r\n\r\n    onClick = () => this.props.hideChat();\r\n    render() {\r\n\r\n        const {classes,chat,user} = this.props;\r\n        \r\n        \r\n            if(chat === undefined)\r\n            {\r\n                return (<main className={classes.content}></main>)\r\n            }\r\n            else\r\n            {\r\n                return(\r\n                    <React.Fragment>\r\n                    <div className={classes.header}>\r\n                    {chat.users.filter(usr => usr!==user)[0]}\r\n                    <ArrowBack\r\n                    className = {classes.back}\r\n                    onClick = {this.onClick}\r\n                    >\r\n                    </ArrowBack>\r\n                    </div>\r\n                <main className={classes.content}>\r\n                    <div className = {classes.messagesList}>\r\n                    {\r\n                        \r\n                    chat.messages.map((message,index) =>{\r\n                        return(<div key = {index}><div key={index} className={message.sender === user ? classes.userMsg : classes.friendMsg}>\r\n                            {message.message}\r\n                        </div>\r\n                        </div>)\r\n                    })\r\n                }\r\n                </div>\r\n                </main>\r\n                </React.Fragment>\r\n                )\r\n            }\r\n        \r\n    }\r\n}\r\n\r\nexport default withStyles(style)(DisplayChat);\r\n","const style = theme => ({\r\n\r\n    sendButton: {\r\n        position: 'absolute',\r\n        right:'0px',\r\n        top:'0px',\r\n        color: 'blue',\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n          color: 'gray'\r\n        }\r\n      },\r\n    \r\n      chatBoxContainer: {\r\n        position: 'absolute',\r\n        bottom: '5px',\r\n        left: '315px',\r\n        boxSizing: 'border-box',\r\n        overflow: 'auto',\r\n        width: 'calc(100% - 300px - 20px)'\r\n      },\r\n    \r\n      chatBox: {\r\n        width: 'calc(100% - 25px)'\r\n      }\r\n    \r\n  });\r\n  \r\n  export default style;","import React, { Component } from 'react';\r\nimport {TextField,withStyles} from '@material-ui/core';\r\nimport {Send} from '@material-ui/icons';\r\nimport style from './style';\r\n\r\n\r\nexport class ChatTextBox extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            text : ''\r\n        };\r\n    }\r\n    onKeyUp = (e) => e.keyCode === 13 ? this.submitMessage() :this.setState({text: e.target.value});\r\n    isValid = (text) => text && text.replace(/\\s/g,'').length;\r\n    submitMessage = (e) => \r\n    {\r\n        if(this.isValid(this.state.text))\r\n        {\r\n            this.props.submitMessage(this.state.text);\r\n            document.querySelector('#chatBox').value = '';\r\n        }\r\n    }\r\n    render() {\r\n        const {classes} = this.props;\r\n        return (\r\n            <div className={classes.chatBoxContainer}>\r\n               <TextField \r\n                id ='chatBox'\r\n                className = {classes.chatBox}\r\n                placeholder = \"Type your message...\"\r\n                onKeyUp = {(e) => this.onKeyUp(e)}>\r\n                </TextField>\r\n                <Send \r\n                onClick = {this.submitMessage}\r\n                className={classes.sendButton}>\r\n                </Send>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(style)(ChatTextBox);\r\n","const style = theme => ({\r\n  \r\n    paper: {\r\n     \r\n        padding: theme.spacing(4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        width:'40vw',\r\n        minWidth:'400px',\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: 'calc(50% + 150px)',\r\n        transform: 'translate(-50%, -50%)'\r\n        \r\n      },\r\n      form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n      },\r\n      submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        padding:theme.spacing(3),\r\n        fontSize:'2em'\r\n      }\r\n});\r\n  \r\n  export default style;","import React, { Component } from 'react';\r\nimport { CssBaseline,Container,withStyles,Paper,Typography,Input,InputLabel,FormControl,TextField,FormControlLabel,Checkbox,Button} from '@material-ui/core';\r\nimport style from './style';\r\n\r\nconst firebase = require(\"firebase\");\r\n\r\nexport class NewChat extends Component {\r\n    \r\n    constructor ()\r\n    {\r\n        super();\r\n        this.state = \r\n        {\r\n            friendemail:'',\r\n            message:''\r\n        };\r\n    }\r\n\r\n    onChange = (e) =>\r\n    {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    userExists = async () =>\r\n    {\r\n        \r\n        const users = await firebase \r\n        .firestore()\r\n        .collection('users')\r\n        .get();\r\n    const exists = users.docs\r\n        .map(doc => doc.data().email)\r\n        .includes(this.state.friendemail);\r\n        this.setState({serverError : !exists})\r\n        return exists;  \r\n    }\r\n\r\n    chatExists = async () =>\r\n    {\r\n        const chatKey = this.createChatKey();\r\n        console.log(`chatKey: ${chatKey}`)\r\n        const chat = await \r\n        firebase\r\n      .firestore()\r\n      .collection('chats')\r\n      .doc(chatKey)\r\n      .get();\r\n    console.log(chat.exists);\r\n    return chat.exists;\r\n\r\n    }\r\n   \r\n    sendMessage = async (e) =>\r\n    {\r\n        \r\n        e.preventDefault();\r\n        const userExists = await this.userExists();\r\n\r\n        if(userExists)\r\n        {\r\n           \r\n            const chatExists = await this.chatExists();\r\n            chatExists ? this.goToChat() : this.createChat();\r\n        }\r\n       \r\n    \r\n    }\r\n\r\n    createChat = () => \r\n    {\r\n        this.props.newChat({\r\n            sendTo : this.state.friendemail,\r\n            message : this.state.message\r\n        });\r\n    }\r\n\r\n    goToChat = () => this.props.goToChat(this.createChatKey(),this.state.message);\r\n\r\n    createChatKey = () =>\r\n    {\r\n        return [firebase.auth().currentUser.email,this.state.friendemail].sort().join(':');\r\n    }\r\n\r\n    render() {\r\n\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n            \r\n                <Paper className = {classes.paper} >\r\n                    <Typography component = \"h1\" variant = \"h5\">Send a message!</Typography>\r\n                    <form className={classes.form} onSubmit = { (e) => this.sendMessage(e)} >\r\n            \r\n            <TextField\r\n               onChange = {(e) => this.onChange(e)}\r\n               variant = \"outlined\"\r\n               margin = \"normal\"\r\n               fullWidth\r\n               name = \"friendemail\"\r\n               label = \"Email Address\"\r\n               id = \"friendemail\"\r\n               autoComplete = \"email\"\r\n            />\r\n            <TextField\r\n               onChange = {(e) => this.onChange(e)}\r\n               variant = \"outlined\"\r\n               margin = \"normal\"\r\n               fullWidth\r\n               name = \"message\"\r\n               label = \"Enter your message\"\r\n               id = \"message\"\r\n            />                   \r\n              \r\n           \r\n            <Button fullWidth variant='contained' className = {classes.submit} color='primary' type='submit'>Send</Button>\r\n          </form>\r\n          {\r\n            this.state.serverError ? \r\n            <Typography component='h5' variant='h6'color=\"secondary\">\r\n              User doesn't exist\r\n            </Typography> :\r\n            null\r\n          }\r\n                </Paper>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(style)(NewChat)","import React, { Component } from 'react';\r\nimport ChatList from '../ChatList';\r\nimport {Button,withStyles} from '@material-ui/core';\r\nimport style from './style';\r\nimport ChatDisplay from '../ChatDisplay';\r\nimport ChatTextBox from '../ChatTextBox';\r\nimport NewChat from '../NewChat';\r\n\r\nconst firebase = require(\"firebase\");\r\n\r\nexport class Dashboard extends Component {\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state ={\r\n            selectedChat:null,\r\n            chatVisible:false,\r\n            newChatVisible:false,\r\n            email:null,\r\n            chats :[]\r\n\r\n        };\r\n    }\r\n    signOut = (e) =>{\r\n        firebase.auth().signOut();\r\n    }\r\n    selectChat = async (chatIndex) =>\r\n    {\r\n       await this.setState({selectedChat:chatIndex, chatVisible:true,newChatVisible:false});\r\n       console.log(this.state);\r\n       this.messageRead();\r\n        \r\n    } \r\n\r\n    submitMessage = (msg) =>{\r\n        const chatKey = this.createChatKey(this.state.chats[this.state.selectedChat].users\r\n            .filter(user => user !== this.state.email)[0]);\r\n            firebase\r\n                .firestore()\r\n                .collection('chats')\r\n                .doc(chatKey)\r\n                .update({\r\n                    messages: firebase.firestore.FieldValue.arrayUnion({\r\n                        message: msg,\r\n                        sender: this.state.email,\r\n                        timestamp: Date.now()\r\n                    }),\r\n                    read:false\r\n                });\r\n    }\r\n\r\n    createChatKey = (friend) => [this.state.email,friend].sort().join(':');\r\n\r\n    chatBtnClicked = () =>this.setState({newChatVisible:true,selectedChat:null});\r\n\r\n    hideChat = () =>this.setState({selectedChat:null});\r\n\r\n    messageRead = () => \r\n    {\r\n        const chatKey = this.createChatKey(this.state.chats[this.state.selectedChat].users.filter(user => user !== this.state.email)[0])\r\n        if(this.lastMessageNotWriteSender(this.state.selectedChat))\r\n        {\r\n            firebase\r\n            .firestore()\r\n            .collection('chats')\r\n            .doc(chatKey)\r\n            .update({\r\n                read:true\r\n            })\r\n        }\r\n        else\r\n        {\r\n            console.log('User is sender');\r\n        }\r\n    }\r\n\r\n    goToChat = async (chatKey,msg) => \r\n    {\r\n        const usersInChat = chatKey.split(':');\r\n        const chat = this.state.chats.find(chat => usersInChat.every(user => chat.users.includes(user) ));\r\n        this.setState({chatVisible : true});\r\n        await this.selectChat(this.state.chats.indexOf(chat));\r\n        this.submitMessage(msg);\r\n        console.log(\"goToChat\");\r\n    }\r\n\r\n    newChat = async (chatObj) =>\r\n    {\r\n        const chatKey = this.createChatKey(chatObj.sendTo);\r\n        await firebase\r\n        .firestore()\r\n        .collection('chats')\r\n        .doc(chatKey)\r\n        .set({\r\n            read : false,\r\n            users : [this.state.email, chatObj.sendTo],\r\n            messages : [{\r\n                message : chatObj.message,\r\n                sender : this.state.email\r\n            }] \r\n        })\r\n        this.setState({newChatVisible : false,chatVisible : true});\r\n        this.selectChat(this.state.chats.length - 1);\r\n        console.log('newChat');\r\n    }\r\n\r\n    lastMessageNotWriteSender = (chatIndex) => this.state.chats[chatIndex].messages[0].sender !== this.state.email;\r\n\r\n    componentDidMount=()=>\r\n    {\r\n        \r\n        firebase.auth().onAuthStateChanged(async user =>{\r\n            if(!user)this.props.history.push('/');\r\n            else{\r\n                await firebase \r\n                .firestore()\r\n                .collection('chats')\r\n                .where('users','array-contains',user.email)\r\n                .onSnapshot(async res =>{\r\n                    const chats = res.docs.map(doc => doc.data());\r\n                    chats.forEach(chat => chat.messages.reverse())\r\n                    await this.setState({email:user.email,chats:chats});\r\n                    console.log(this.state);\r\n                });\r\n              \r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <ChatList history={this.props.history}\r\n                chats={this.state.chats}\r\n                userEmail={this.state.email}\r\n                selectChat={this.selectChat} \r\n                chatBtnClicked={this.chatBtnClicked}\r\n                chats={this.state.chats}\r\n                chatIndex={this.state.selectedChat}\r\n                />\r\n                {\r\n                    this.state.chatVisible ?  <ChatDisplay hideChat={this.hideChat} user = {this.state.email} chat = {this.state.chats[this.state.selectedChat]}></ChatDisplay> : null\r\n                }\r\n                {\r\n                    this.state.selectedChat !== null && this.state.chatVisible !== false ?\r\n                    <ChatTextBox submitMessage ={this.submitMessage}></ChatTextBox>\r\n                    :null\r\n                }\r\n              {\r\n                   this.state.newChatVisible ? <NewChat goToChat = {this.goToChat} newChat = {this.newChat}></NewChat> :null\r\n              }\r\n                 <Button \r\n                  variant=\"contained\" \r\n                  fullWidth \r\n                  color='primary' \r\n                  onClick={this.signOut} \r\n                  className={classes.signOut}\r\n                  >\r\n                    signOut\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(style)(Dashboard);\r\n","import React, { Component } from 'react';\r\nimport ParticlesBg from \"particles-bg\";\r\n\r\nexport class ParticleComponent extends Component {\r\n    render() {\r\n        \r\n      let config = {\r\n        num: [4, 7],\r\n        rps: 0.1,\r\n        radius: [5, 40],\r\n        life: [1.5, 3],\r\n        v: [2, 3],\r\n        tha: [-40, 40],\r\n        alpha: [0.6, 0],\r\n        scale: [.1, 0.4],\r\n        position: \"all\",\r\n        color: [\"#0000FF\"],\r\n        cross: \"dead\",\r\n        random: 15\r\n      };\r\n    \r\n      if (Math.random() > 0.85) {\r\n        config = Object.assign(config, {\r\n          onParticleUpdate: (ctx, particle) => {\r\n            ctx.beginPath();\r\n            ctx.rect(\r\n              particle.p.x,\r\n              particle.p.y,\r\n              particle.radius * 2,\r\n              particle.radius * 2\r\n            );\r\n            ctx.fillStyle = particle.color;\r\n            ctx.fill();\r\n            ctx.closePath();\r\n          }\r\n        });\r\n      }\r\n\r\n        return (\r\n            <React.Fragment>\r\n         <ParticlesBg  type=\"custom\" config={config} bg={true} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ParticleComponent;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {Switch,Route,BrowserRouter as Router} from 'react-router-dom';\nimport Login from './Components/Login';\nimport Signup from './Components/Signup';\nimport Dashboard from './Components/Dashboard';\nimport ParticleComponent from './Components/ParticleComponent';\n\nconst firebase = require(\"firebase\");\nrequire (\"firebase/firestore\");\nfirebase.initializeApp({\n    apiKey: \"AIzaSyA6Ccjz0pBXgQlerA7Tj7BnyzboTGsajOQ\",\n    authDomain: \"chat-app-1ecbc.firebaseapp.com\",\n    databaseURL: \"https://chat-app-1ecbc.firebaseio.com\",\n    projectId: \"chat-app-1ecbc\",\n    storageBucket: \"chat-app-1ecbc.appspot.com\",\n    messagingSenderId: \"933134151767\",\n    appId: \"1:933134151767:web:68b14b42369a741ff03312\",\n    measurementId: \"G-12BCPKQMZP\"\n \n});\nconst routing = \n(\n<Router>\n\n    <div id= \"routing-container\">\n    \n        <ParticleComponent/>\n        <Route exact path='/' component={Login}></Route>\n        <Route path='/signup' component={Signup}></Route>\n        <Route path='/dashboard' component={Dashboard}></Route>\n        \n    </div>\n    \n</Router>\n\n);\n\nReactDOM.render(routing, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}